#! /bin/sh
##
## k8s-ipvs-local-route_test --
##
##   Test script for k8s-ipvs-local-route executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$

. /etc/profile
test -n "$DOMAIN" || DOMAIN=xcluster
test -n "$PREFIX" || PREFIX=1000::1
yamld=/etc/kubernetes/k8s-ipvs-local-route

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}

cmd_tcase_check_namespaces() {
	test_namespaces
}
cmd_tcase_check_nodes() {
	test_nodes
}
cmd_tcase_vip_routes() {
	tcase "Set VIP routes (ECMP)"
	vip_route
}
##   tcase_start_servers
##     Start application servers and a svc
cmd_tcase_start_servers() {
	tcase "Start application servers and a svc"
	$kubectl create -f $yamld/alpine.yaml || tdie alpine
	$kubectl create -f $yamld/svc.yaml || tdie svc
	assign-lb-ip -svc alpine -ip 10.0.0.0,$PREFIX:10.0.0.0
	test_deployment alpine 60
}
##   tcase_default_route <target>
##     Set a (non-ECMP) default route
cmd_tcase_default_route() {
	tcase "Set a (non-ECMP) default route [$1]"
	test -n "$1" || tdie "No route"
	ip route replace default via $1 || die ipv4
	ip -6 route replace default via $PREFIX:$1 || die ipv6
}
##   tcase_vip_route <target>
##     Set a (non-ECMP) vip route
cmd_tcase_vip_route() {
	tcase "Set a (non-ECMP) VIP route [$1]"
	test -n "$1" || tdie "No route"
	ip route replace 10.0.0.0/24 via $1 || die ipv4
	ip -6 route replace $PREFIX:10.0.0.0/120 via $PREFIX:$1 || die ipv6
}


. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
